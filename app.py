import logging
from fastapi import FastAPI, Request, Form
from fastapi.responses import PlainTextResponse
from twilio.twiml.messaging_response import MessagingResponse
from services import openai_service, supabase_client, twilio_service

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("app")

app = FastAPI()


@app.get("/")
async def root():
    return {"message": "ü§ñ Secret√°ria pessoal online!"}


@app.post("/webhook/whatsapp")
async def whatsapp_webhook(
    request: Request,
    From: str = Form(...),
    Body: str = Form(""),
    NumMedia: str = Form("0"),
    MediaUrl0: str = Form(None)
):
    logger.info(f"üì© Mensagem recebida de {From}: {Body if Body else '[√°udio]'}")
    resp = MessagingResponse()
    msg = resp.message()

    try:
        # √Åudio
        if NumMedia != "0" and MediaUrl0:
            msg.body("üîé Transcrevendo seu √°udio...")
            text = await openai_service.transcribe_audio(MediaUrl0)
            if text:
                reply = await openai_service.process_text_message(text)
                msg.body(f"‚úÖ Transcri√ß√£o: {text}\n\nü§ñ {reply}")
            else:
                msg.body("‚ö†Ô∏è N√£o consegui transcrever seu √°udio.")

        # Texto
        else:
            if Body.strip().lower() in ["oi", "ol√°", "ola", "configura√ß√µes", "configuracoes"]:
                menu = (
                    "üëã Ol√°, eu sou sua secret√°ria pessoal.\n"
                    "Quais calend√°rios deseja vincular?\n\n"
                    "1Ô∏è‚É£ Google Calendar\n"
                    "2Ô∏è‚É£ Outlook Calendar\n"
                    "3Ô∏è‚É£ Apple Calendar\n"
                    "4Ô∏è‚É£ Configura√ß√µes\n\n"
                    "Digite o n√∫mero da op√ß√£o desejada."
                )
                msg.body(menu)
            else:
                msg.body("üîé Analisando suas informa√ß√µes...")
                reply = await openai_service.process_text_message(Body)
                msg.body(f"ü§ñ {reply}")

    except Exception as e:
        logger.error(f"‚ùå Erro no webhook: {e}")
        msg.body("‚ö†Ô∏è Ocorreu um erro ao processar sua mensagem.")

    return PlainTextResponse(str(resp), media_type="application/xml")
